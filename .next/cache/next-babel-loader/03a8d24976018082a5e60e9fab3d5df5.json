{"ast":null,"code":"var _jsxFileName = \"/home/xlugo/Escritorio/podcasts/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from 'next/error';\nexport default class extends React.Component {\n  static async getInitialProps({\n    res\n  }) {\n    try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended');\n      let {\n        body: channels\n      } = await req.json();\n      return {\n        channels,\n        statusCode: 200\n      };\n    } catch (e) {\n      res.tatusCode = 503;\n      return {\n        channels: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channels,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(Layout, {\n      title: \"Podcasts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(ChannelGrid, {\n      channels: channels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/xlugo/Escritorio/podcasts/pages/index.js"],"names":["Layout","ChannelGrid","Error","React","Component","getInitialProps","res","req","fetch","body","channels","json","statusCode","e","tatusCode","render","props"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAC3C,eAAaC,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC,QAAI;AACF,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAD,CAArB;AACA,UAAI;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAqB,MAAMH,GAAG,CAACI,IAAJ,EAA/B;AACA,aAAO;AAAED,QAAAA,QAAF;AAAYE,QAAAA,UAAU,EAAE;AAAxB,OAAP;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVP,MAAAA,GAAG,CAACQ,SAAJ,GAAgB,GAAhB;AACA,aAAO;AAAEJ,QAAAA,QAAQ,EAAE,IAAZ;AAAkBE,QAAAA,UAAU,EAAE;AAA9B,OAAP;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAA2B,KAAKI,KAAtC;;AACA,QAAIJ,UAAU,KAAK,GAAnB,EAAwB;AACtB,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtB0C","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from 'next/error';\n\nexport default class extends React.Component {\n  static async getInitialProps({ res }) {\n    try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended');\n      let { body: channels } = await req.json();\n      return { channels, statusCode: 200 };\n    } catch (e) {\n      res.tatusCode = 503;\n      return { channels: null, statusCode: 503 };\n    }\n  }\n\n  render() {\n    const { channels, statusCode } = this.props;\n    if (statusCode !== 200) {\n      return <Error statusCode={statusCode} />;\n    }\n    return (\n      <Layout title=\"Podcasts\">\n        <ChannelGrid channels={channels} />\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}